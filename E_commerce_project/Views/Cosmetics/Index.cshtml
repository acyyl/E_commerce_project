@model E_Commerce_Project.ViewModels.CosmeticProductListVM

<h1>Cosmetic Products</h1>




<!-- Conditionally show "My Profile" link for authenticated users -->
@if (User.Identity.IsAuthenticated)
{
    <ul class="nav">
        <li class="nav-item">
            <a class="nav-link" asp-controller="Account" asp-action="Profile">My Profile</a>
        </li>
    </ul>
}





<!-- Search Filters -->
<form method="get" class="filters-form">
    <div class="filter-item">
        <label for="category">Category:</label>
        <select asp-for="SelectedCategory" id="category" onchange="this.form.submit()">
            <option value="">All Categories</option>
            @foreach (var category in Model.Products.Select(p => p.Category.Trim().ToLower()).Distinct())
            {
                <option value="@category" selected="@(Model.SelectedCategory == category ? "selected" : null)">@category</option>
            }
        </select>
    </div>

    <div class="filter-item">
        <label for="minPrice">Min Price:</label>
        <input type="number" asp-for="MinPrice" id="minPrice" value="@Model.MinPrice" step="0.01" min="0" onchange="this.form.submit()" />
    </div>

    <div class="filter-item">
        <label for="maxPrice">Max Price:</label>
        <input type="number" asp-for="MaxPrice" id="maxPrice" value="@Model.MaxPrice" step="0.01" min="0" onchange="this.form.submit()" />
    </div>

    <div class="filter-item">
        <label for="popularity">Popularity:</label>
        <select asp-for="SelectedPopularity" id="popularity" onchange="this.form.submit()">
            <option value="">All Popularity Levels</option>
            <option value="5" selected="@(Model.SelectedPopularity == 5 ? "selected" : null)">★★★★★</option>
            <option value="4" selected="@(Model.SelectedPopularity == 4 ? "selected" : null)">★★★★</option>
            <option value="3" selected="@(Model.SelectedPopularity == 3 ? "selected" : null)">★★★</option>
            <option value="2" selected="@(Model.SelectedPopularity == 2 ? "selected" : null)">★★</option>
            <option value="1" selected="@(Model.SelectedPopularity == 1 ? "selected" : null)">★</option>

        </select>
    </div>

    <div class="filter-buttons">
        <button type="submit" class="btn btn-danger">Filter</button>
    </div>
</form>

<!-- Product Listing -->
@if (Model.Products.Any())
{
    <div class="product-grid">
        @foreach (var product in Model.Products)
        {
            <div class="product-card">
                <img src="@product.ImageUrl" alt="@product.Name" class="product-image" />
                <div class="product-info">
                    <h5>@product.Name</h5>
                    <p class="product-price">From @product.Price€</p>
                    <div class="product-buttons">
                        <a href="@Url.Action("Details", "Cosmetics", new { id = product.Id })" class="btn btn-details">
                            <i class="fas fa-eye"></i>
                        </a>
                        <form method="post" asp-action="AddToCart" asp-controller="CartItems" style="display: inline;">
                            <input type="hidden" name="productId" value="@product.Id" />
                            <button type="submit" class="btn btn-danger">
                                <i class="fas fa-shopping-cart"></i>
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Pagination Controls -->
    <div class="pagination-container">
        @if (Model.CurrentPage > 1)
        {
            <a href="@Url.Action("Index", new { page = Model.CurrentPage - 1, category = Model.SelectedCategory, minPrice = Model.MinPrice, maxPrice = Model.MaxPrice, popularity = Model.SelectedPopularity })" class="btn btn-paginate">
                &lt;
            </a>
        }

        @for (var i = 1; i <= Model.TotalPages; i++)
        {
            <a href="@Url.Action("Index", new { page = i, category = Model.SelectedCategory, minPrice = Model.MinPrice, maxPrice = Model.MaxPrice, popularity = Model.SelectedPopularity })" class="btn btn-paginate @((i == Model.CurrentPage) ? "active" : "")">
                @i
            </a>
        }

        @if (Model.CurrentPage < Model.TotalPages)
        {
            <a href="@Url.Action("Index", new { page = Model.CurrentPage + 1, category = Model.SelectedCategory, minPrice = Model.MinPrice, maxPrice = Model.MaxPrice, popularity = Model.SelectedPopularity })" class="btn btn-paginate">
                &gt;
            </a>
        }
    </div>
}
else
{
    <p>@Model.Message</p>
}

<!-- Styles -->
<style>
    .filters-form {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 15px;
        margin-bottom: 20px;
        background-color: #f9f9f9;
        padding: 20px;
        border-radius: 8px;
    }

    .filter-item {
        display: flex;
        flex-direction: column;
    }

        .filter-item label {
            font-weight: bold;
            margin-bottom: 5px;
        }

        .filter-item select,
        .filter-item input {
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

    .filter-buttons {
        grid-column: span 2;
        display: flex;
        justify-content: flex-end;
    }

    .btn-danger {
        background-color: #dc3545;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

        .btn-danger:hover {
            background-color: #c82333;
        }

    .product-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
    }

    .product-card {
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 10px;
        text-align: center;
    }

    .product-image {
        max-width: 100%;
        height: auto;
    }

    .product-info {
        margin-top: 10px;
    }

    .product-buttons {
        display: flex;
        gap: 10px;
        justify-content: center;
    }

    .btn-paginate {
        margin: 0 5px;
        padding: 5px 10px;
        text-decoration: none;
        border: 1px solid #ccc;
        border-radius: 4px;
        color: #000;
    }

    .pagination-container {
        margin-top: 20px;
        text-align: center;
    }


        .btn-paginate.active {
            font-weight: bold;
            background-color: indianred;
            color: #fff;
        }

    .btn-details {
        background-color: #FFC0CB;
        color: white;
        border: none;
        padding: 5px 10px;
        border-radius: 4px;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        transition: background-color 0.3s ease;
    }

        .btn-details:hover {
            background-color: #FFB6C1;
        }

        .btn-details i {
            font-size: 16px;
        }
</style>

<!-- Include Font Awesome -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
